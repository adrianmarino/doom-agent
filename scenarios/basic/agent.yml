env:
  config_file: ./scenarios/basic/doom.cfg
  variables:
    - kills
    - ammo
    - health
  train:
    show: False
    sound: False
    advance_steps: 4 # Number of frames to advance environment after apply an strategy to this.
  play:
    show: True
    sound: True
    advance_steps: ${env.train.advance_steps}
    episodes: 30
    frame_delay: 0.25

hiperparams:
  input_shape: (64, 64, 4) # Main model input shape (4 images in gray scale) (width, heights, channels).
  chop_bottom_height: 0 # pixels chapped from bottom of input frame. Used minimize input size.
  lr: 0.0001 # Main model learning rate.
  gamma: 0.99 # Discount factor of TD target calculus.
  batch_size: 16 # Model fit batch size.
  train_freq: 100 # Number of time steps between training interval.
  update_target_model_freq_schedule: # Number of time steps between each TD Target model weights update.
    - from_time: 0 # Initially update each 900 times.
      freq: 2000
  memory_size: 5000 # Number of previous transitions to remember.
  epsilon:
    initial: 1.0
    final: 0.001
  phase_time:
    observe: 2000 # Number of times that epsilon-greedy method select a random strategy.
    explore: 30000 # Number of times that epsilon-greedy method select a predicted strategy(from a neural network).
    train: 5000
  rewards:
    kills: 0.5 # Increase X reward every time an enemy is killed.
    ammo: 0  # Decrease X reward every time a bullet is used.
    health: 0 # Decrease X reward every time health level goes down.

callbacks:
  model:
    active:
      - tensor_board
      # - checkpoint
    settings:
      checkpoint:
        monitor: loss
        path: ${checkpoint_path} # Path were weights files are saved.
      tensor_board:
        batch_size: ${hiperparams.batch_size}
        metric_path: ./metrics
  algorithm:
    active:
      # - epsilon
      # - td_target
      - kills
      # - ammo
      # - health
      - save_model
    settings:
      save_model: # Save model weights every X times.
        freq: 0 # last time
        path: ${checkpoint_path}
      epsilon:
        initial: ${hiperparams.epsilon.initial}
        final: ${hiperparams.epsilon.final}
        explore: ${hiperparams.phase_time.explore}
        metric_path: ${metric_path}
      td_target_update:
        metric_path: ${metric_path}
        schedule: ${hiperparams.update_target_model_freq_schedule}
      kills:
        metric_path: ${metric_path}
      ammo:
        metric_path: ${metric_path}
      health:
        metric_path: ${metric_path}

report:
  path: ./reports
  last_times: 200
  metrics:
    - kills

metric_path: ./metrics
checkpoint_path: checkpoints # Path were weights files are saved.

logger:
  name: agent
  path: logs
  level: INFO
  message_format: "%(levelname)s %(asctime)s - %(message)s"
  date_format: "%Y-%m-%d %H:%M:%S"
